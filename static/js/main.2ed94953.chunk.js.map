{"version":3,"sources":["components/card/card.component.jsx","components/card-list/card-list.component.jsx","components/search-box/search-box.component.jsx","App.js","reportWebVitals.js","index.js"],"names":["Card","props","className","alt","src","monster","id","name","email","CardList","monsters","map","SearchBox","placeholder","handleChange","type","onChange","App","state","searchField","fetch","then","response","json","users","setState","this","filteredMonsters","filter","toLowerCase","includes","e","target","value","React","Component","ReactDOM","render","document","getElementById","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","StrictMode"],"mappings":"+RAIaA,G,kBAAO,SAACC,GAAD,OAChB,sBAAKC,UAAU,iBAAf,UACG,qBAAKC,IAAI,UAAUC,IAAG,+BAA0BH,EAAMI,QAAQC,GAAxC,gBAEtB,6BAAKL,EAAMI,QAAQE,OACnB,4BAAIN,EAAMI,QAAQG,aCJZC,EAAW,SAACR,GAAD,OACtB,qBAAKC,UAAU,YAAf,SACGD,EAAMS,SAASC,KAAI,SAAAN,GAAO,OACf,cAAC,EAAD,CAAuBA,QAASA,GAArBA,EAAQC,UCJtBM,G,MAAY,SAAC,GAAD,IAAGC,EAAH,EAAGA,YAAaC,EAAhB,EAAgBA,aAAhB,OACrB,uBACAZ,UAAU,SACVa,KAAK,SACLF,YAAaA,EACbG,SAAUF,MCFRG,E,kDACF,WAAYhB,GAAO,IAAD,8BACd,cAAMA,IACDiB,MAAO,CACRR,SAAU,GACVS,YAAa,IAJH,E,gEAQE,IAAD,OACfC,MAAM,8CACLC,MAAK,SAAAC,GAAQ,OAAIA,EAASC,UAC1BF,MAAK,SAAAG,GAAK,OAAI,EAAKC,SAAS,CAAEf,SAAUc,S,+BAGpC,IAAD,SAC8BE,KAAKR,MAA/BR,EADJ,EACIA,SAAUS,EADd,EACcA,YACZQ,EAAmBjB,EAASkB,QAAQ,SAAAvB,GAAO,OAC7CA,EAAQE,KAAKsB,cAAcC,SAASX,EAAYU,kBAGhD,OACA,sBAAK3B,UAAU,MAAf,UACI,oDACA,cAAC,EAAD,CACAW,YAAY,kBACZC,aAAe,SAAAiB,GAAC,OAAI,EAAKN,SAAS,CAAEN,YAAaY,EAAEC,OAAOC,WAE1D,cAAC,EAAD,CAAUvB,SAAUiB,W,GA5BlBO,IAAMC,WAkCxBC,IAASC,OACL,cAAC,EAAD,IACAC,SAASC,eAAe,SAGbtB,QClCAuB,EAZS,SAAAC,GAClBA,GAAeA,aAAuBC,UACxC,6BAAqBrB,MAAK,YAAkD,IAA/CsB,EAA8C,EAA9CA,OAAQC,EAAsC,EAAtCA,OAAQC,EAA8B,EAA9BA,OAAQC,EAAsB,EAAtBA,OAAQC,EAAc,EAAdA,QAC3DJ,EAAOF,GACPG,EAAOH,GACPI,EAAOJ,GACPK,EAAOL,GACPM,EAAQN,OCDdL,IAASC,OACP,cAAC,IAAMW,WAAP,UACE,cAAC,EAAD,MAEFV,SAASC,eAAe,SAM1BC,M","file":"static/js/main.2ed94953.chunk.js","sourcesContent":["import React from 'react';\r\n\r\nimport './card.styles.css';\r\n\r\nexport const Card = (props) => (\r\n    <div className='card-container'>\r\n       <img alt='monster' src={`https://robohash.org/${props.monster.id}?set=set2}`}\r\n       />\r\n       <h1>{props.monster.name}</h1>\r\n       <p>{props.monster.email}</p>\r\n    </div>\r\n);","import React from 'react';\r\n\r\nimport './card-list.styles.css';\r\nimport {Card} from '../card/card.component';\r\n\r\nexport const CardList = (props) => (\r\n  <div className='card-list'>\r\n    {props.monsters.map(monster =>\r\n                <Card key={monster.id} monster={monster}/>\r\n                )}\r\n  </div>\r\n);","import React from 'react';\r\n\r\nimport './search-box.styles.css';\r\n\r\nexport const SearchBox = ({ placeholder, handleChange }) => (\r\n    <input \r\n    className='search'\r\n    type='search' \r\n    placeholder={placeholder} \r\n    onChange={handleChange} />\r\n);","import React from 'react';\nimport ReactDOM from 'react-dom';\n\nimport './App.css';\nimport {CardList} from './components/card-list/card-list.component';\nimport { SearchBox } from './components/search-box/search-box.component';\n\nclass App extends React.Component{\n    constructor(props){\n        super(props);\n        this.state= {\n            monsters: [],\n            searchField: ''\n        };\n    }\n\n    componentDidMount(){\n        fetch(\"https://jsonplaceholder.typicode.com/users\")\n        .then(response => response.json())\n        .then(users => this.setState({ monsters: users}))\n    }\n    \n    render(){\n        const { monsters, searchField } = this.state;\n        const filteredMonsters = monsters.filter( monster => \n            monster.name.toLowerCase().includes(searchField.toLowerCase())\n            );\n        \n            return(\n            <div className='App'>\n                <h1> Monsters Rolodex </h1>\n                <SearchBox \n                placeholder='search monsters'\n                handleChange={ e => this.setState({ searchField: e.target.value})} />\n\n                <CardList monsters={filteredMonsters} />\n            </div>\n        );\n    }\n}\n\nReactDOM.render(\n    <App />,\n    document.getElementById('root')\n);\n\nexport default App;","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}